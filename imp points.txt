Questions:

Project 1:

1. What is bootstrap?
Ans. Bootstrap is a free front-end framework for faster and easy development. It has mobile first development approach (means it adjusts UI according to device width)
(UI changes according  to the device like phone,laptop screen etc)

2. What is jquery?
Ans. JQuery is a Javascript library that simplifies Javascript programming.

3. Why js script tag is written at the end of body tag?
Ans. 
	a. html page opens/loads in browser only when browser's html parser goes through it and understands it. 
	b. when script tag comes at begining, parser stops there and waits for that js to download form server. Once js file downloaded it moves ahead for further parsing. So page will not load until js is downloaded.
	c. But if js is at the end, parser will be done with entire UI until it reaches the js script tag. Thus user can see that portion which has already been parsed. So this makes page to render earlier which is good thing.
OR i.e. in other words:
Browser can't start rendering before DOM is ready and by default script tag blocks any other browser process until script file is downloaded and executed.browser will be blocked when it meets script tag in any position of the page, so DOMContentReady will not be fired until script tag is downloaded and executed. As a result, user can't see anything except white blank page until script is fully processed regardless of position of script tag.

4. what does ../ means? 
Ans. going back one folder up


Project 2:
1. What is DTD(Document Type definition)
Ans.DTD define the structure and legal element and attribute of XML document. DTD defines rules for the tags ,elements,attribues written in html and xml.

2. What is diff between html and html5
Ans. Key difference are:
	*HTML5 allows javascript to run in both background or also in same thread as browser interface. We can create a worker javascript that runs in background. But HTML does not allows Javascript to run in background; it run in same thread as browser interface.
	*HTML5 has lot new features like header, footer section etc and many other things.
	*HTML5 support web socket protocol

3. <!DOCTYPE html> meaning?
Ans.<!DOCTYPE html> declaration means that
	a. html page is html5. 
	b. In other words, html page should follow DTD of html5 type. i.e. now html content should follow all the rules of html5 DTD.
   
4. why html5 DTD tag i.e. <!DOCTYPE html> is required when using bootstrap?
Ans. <!DOCTYPE html> means html page is html5. When using bootstrap css files, our page should be html5 because bootstrap css uses many html5 features. So our html should use this DTD tag to make it html5.

5. What is lang in <html lang="en">
Ans.lang is used to declare language of the Web Page 

6. What happens when u define utf-8 charset (i.e. <meta charset="utf-8">) in your html?
Ans.The charset attribute specifies the character encoding for the HTML document. This means that you can't use any character in html page which is not a part of utf-8 charset (if utf-8 is defined as charset.)

7. What is viewport?
Viewport is user's visible area of web page that varies with device (as different devices have different width). <meta> viewport element give the browser instruction how to control page dimension and scaling.

8. What is the meaning of width=device-width and initial-scale=1? i.e. (<meta name="viewport" content="width=device-width, initial-scale=1">)
Ans.width=device-width set the width of the page to follow the screen width of the device.
    initial-scale=1.0 - set initial zoom level when the page is loaded in the browser.

9. What is diff between container and conatiner-fluid class?
Ans. container class provides fixed width container and conatiner-fluid class provide full width container covering entire width of the viewport.

10. Can container class be nested?
Ans. NO 

11. What is div tag in html?
Ans. div tag is used to group the block elements to format them with CSS.

12. What is bootstrap grid system?
Ans.bootstrap grid system allow upto 12 coloumn across the page 

13. What is the size of bootstrap grid row?
Ans. 12

14. What is diff between tag and attribute in html?
<a href="page.html">Page1 Link</a>
In above line, 'a' is tag. href is attribute. So for every tag, there can be various attributes like href, class, id etc.

15. What is sm in col-sm-4? Can it have other values also?
Ans.For small devices we will use the .col-sm-* classes. Yes we can have other values also.


Project 3:
1. What is diff between html and xml? 
Ans 1)html was designed to specify how data should be displayed on web page where as xml was designed to hold the data
	2)html has pre-defined tags but xml can have user defined tags

2. What is diff between html, html5 and xhtml?
Ans. html : It is used to display data in browser.
	 html5:It is better version of html which is not just text but includes medio, video , audio  etc. features also
	 xhtml: Its html4 with strict rules of xml. i.e. a tag if defined should also be closed i.e. just <a ...> is wrong. it should be <a ...>..</a>.

3. ***TODO - col-sm-3 defining diff layouts for various kind of devices ***
19. Whats is difference between semantic and non-semantic elemtns/tags in html5?
Sementic elements/tag has clear meaning to both browser and developer from its name itself. For e.g. header, footer, article, section etc
Non-semantic elements use is not clear from its name. For e.g. div, span etc

4. What are the html5 semantic elements/tags?
Ans. <article>
<aside>
<details>
<figcaption>
<figure>
<footer>
<header>
<main>
<mark>
<nav>
<section>
<summary>
<time>

5. For controlling html elements/tags from css, which tag's attributes are used?
Ans.class and id

6. If we define a class or id attribute in any html tag, is it required for it to be present in any css file also?
No. Its required in css only if we want to set some styles for that classes from the css file.

7. <nav></nav> and <div class="nav"></div>. In both these code lines, from where nav can come?
Ans. nav in first is coming from html and in other it is coming from css in bootstrap (becasue tag can come from html only and class, id can come from both html/css)

8. a. If there is some tag defined, then can it be coming from css file?
	No. Tags can be defined/used in html only
	b. If there is some class defined, then can that class be coming from html5?
	There are no pre-defined classes in html5. But we can define class in html/html5.


Project 4:
1. What is difference between tcp, http1.0, http1.1, http2.0, websockets, long poll, http streaming protocols
Ans. 
	a. TCP: Transmission Control Protocol is a standard which defines how to establish and maintain network conversation
	b. http1.0:Request-response transport protocol layered on TCP.Client makes full request and server gives full response  and then the connection is closed.
	c. http1.1:maintain the request-response of http1.0 but all the connection for multiple request/responses is reused and not closed.
	d. Web-Sockets:It is message based transport. Messages are delimited on wire and are re-assembled in full before the delivery to the application.It is bi-directional,full-duplex(Refers to the transmission of data in two directions simultaneously.)
	e. long-poll- It is a kind of "hack" where server do not respond to the client request immeditely .As soon as server responds, the client sends a new request.
	f. http streaming: It is a technique that allows the server send multiple responses to single client request.



Project 5:
1. Why is git used?
whatever source code we write, we can save it online. Anyone can take that code, add code in it, revert somee code etc etc. It enables multiple people to work on same project.

2. Example of git work:
	a. lets say pk did some work in her local repo and pushed changes in remote repo. Now deeps pulls those changes from remote repo to her local repo and then add some changes of her own. Now deeps pushes her new changes in remote repo. Now pk needs to pull deeps changes from remote repo to her local repo to make her local repo latest.

3. What are some common terms in git?
	a. repo/repositry: It is the folder in which all code files/folders are present. repo is remotely present. It can be created from git website or from git commandline.
	b. clone: cloning repo
	c. pull: taking new changes from remote repo to local repo
	d. commit: When you have changes in files in your local repo but you need to push only 3 files in remote repo. So we can choose all the files which needs to be pushed in remote repo and add them in a commit. A commit can be pushed then.
	e. merge conflict: If we take pull from remote repo; amd new changes coming from remote repo conflicts with our local changes, its called merge conflict. In that case, git will tell us that merge conflicts are there and you need to resolve it manually.

4. What are some common git commands?
	a. git clone <repoUrl> clones/copy remote repositry to your local machine [repositry is nothing but a folder present in git remote server]
	b. once git is cloned, git pull <branchName> is used to pull any new files/folders which other peoples pushed in that repo.
	c. Files should be in staging area to get commited. Only commit goes to remote repo on push command. So to add files in staging area, run git add <fileName 1> <fileName2> command. This command can be run multiple times also.
	d. For commiting all the files/folders present in staging area, run git commit -m <message text> where message text represent what changes you are adding to commit.
	e. For pushing any commit, run git push <branchName>.
	f. git diff command tells us all the modified files which are in unstaged area
	g. git diff --cached command tells us all the files which are in staged area

5. git push example flow: So if you have any changes in local repo which you need to push in remote repo, then folow these steps:
	a. take a pull from remote repo. Because if you push your changes without taking latest changes from remote repo, things will break.
	For example if you took pull 2 days back, and in these 2 days, many people pushed changes in remote repo. Then as you havent taken any pull, your local repo doesnt have changes of last 2 days. Now if do push, then things can break. So always take a pull just before doing a push.
	b. git add <file1> <file2> to add all of your changes in staging area. You can run this command multiple times separetly also for each file.
	c. git commit -m <message text> to commit all of the changes present in staging area.
	d. git push <repoName> to push that commit in remote repo.

6. **TODO** What's meaning of "git pull origin master" command?

Project 6:
1. How to close html tag
Ans. Two ways:
	a. <p>...</p> [open tag and close tag are sperate. Used when there is some content needs to be defined between tags. For e.g. <p>Hello</p>]
	b. <br/> [opening and closing of tag is happening together. Used when no content needs to be set between tags. For example br tag.]

2. How to define label for any html element and whats the benefit of defining in that way?
Ans. use <label for="elementId">labelName</label>. Benefit of using it is that:
	a. When layout changes as per device width, it handles label and input displayt properly.
	b. For blind users, screen reader reads proprely that this label is for this input

3. What are values of type attribute in button tag and for what cases those values are used?
Ans.  button, submit and reset ***TODO***

4. What is form tag in html and whats its use?
Ans. form tag in html is used to create form for user input. It is used to pass user data to a specified URL.

5. What does action attribute in form tag do?
Ans. It does 2 things:
	a. Sends form's data to the value url.
	b. Not only it sends form's data to value url, it goes to that url also.

6. What if we dont want to go to some other page on form submit?
Ans Leave action value empty

7. What does method attribute in form tag do?
Ans.The method attribute specifies how to send the form data. i.e. either by GET or POST
The form data can be sent as URL variable(with method: GET)or http post transaction(with method="POST").

8. How to write form tag to make it submittable?
Ans.A form tag can be made submittable by using input with type="submit". For e.g. <input type="submit"/> and <button type="submit"/> both are correct.

9. What is difference between get and post methods of sending data?
Ans. 
	a. GET method sends data in url in format of key value pair which is known as query string paramter For e.g. .../.../?key1=value1&key2=value2 (In this example, key1=value1&key2=value2 is called query string parameters)
	b. POST method sends data in message body. message body is part of request header.

10. **TODO** What is request header and response header in http request


Project 7:
1. What is diff between URL, request, response, request header, response header, html?
Ans. 
	a.  URL: ** TODO ** 
	b. 	Request: When URL is entered, many info goes to server along with URL. This whole set of info is called a request. 
	c. Request has following things in it:
		i. URL
		ii. request headers: In request header, we can pass additional info to server. Browser also adds some additional info by itself in request header For e.g. user-agent field.
		iii. query string paramters: query string parameters can be added by us by submitting a form as GET. It contains key value pair of form inputs. These key value pair are also visible in URL. For e.g. .../.../?key1=value1&key2=value2
		iv. Form data: It can be added by submitting a form as POST. Its a key value pair but not visible in URL.
	d. Why request is made by user: In 2 cases request is done:
		i.  For getting some web resource like html, css and js. Usually htmls, css and js which your browser can understand are not in your local machine. They come from some server. For e.g. facebook page.
		ii. For asking server to do some action
	e. Response: When we request something from server, server takes that request and do some action. After doing that action, it sends some response. In that response, server sends html, js and css files. Server can also send other types of files also like json, xml, pdf, img, doc etc.
	f. Response has following things in it:
		i. web resource file as response like html, js, css, img, doc, pdf, json, xml
		ii. Response header: **TODO: ak*

Project 8:
1. Where should we use html, css and javascript
Ans 
	a. html: data and its layout is present in html. It can itself contain css and javascript content but it should be avoided for better layering/clarification in code.
		i. It can handle css by using style tag in head (entire css file) OR style attribute in any tag (for inline css). [But its not preferred. Always write css in separate css file for better layering of code.]
		ii. It can handle js by using script tag in head/body (usually we write it in the end of body tag). OR we can add inline js directly in any tag as different event attributes. For e.g. button tag has onclick event attribute which can have javascript as its value.
	b. css : all the styles like color, background color, font style, position, font size etc should be present in css.
	c. javascript: can do various things:
		i. it can handle user actions/inputs For e.g. click, double click, right click, keyboard press etc
		ii. it can send request and get response from server.
		iii. it can manupulate html or css content
2. What is difference between style tag and style attribute?
Ans. style tag : The <style> tag is used to define style information for an HTML document.
     Inside the <style> element you specify how HTML elements should render in a browser.
     style attribute :The style attribute specifies an inline style for an element.
   
3. How a css file content can be written in html and is it preferred to do so?
Ans. CSS can be added to html in 3 ways :
   a)Inline - by using the style attribute in HTML elements
   b)Internal- by using a <style> element in the <head> section
   c)External- by using an external CSS file [preferred as there is proper layering of code]

4. How a JS file content can be written in html and is it preferred to do so?
Ans. JS file can be witten in html 
	a. Inline - by using event attributes like onClick etc.
	b. Internal - using <script> tag.
	b. External - by using external js file [preferred as there is proper layering of code. data and its layout should be in html, style should be in css and actions should be in js]
    

5. How a inline css can be written in html and is it preferred to do so?
Ans. Inline css: It is used to apply a unique style to a single html tag. An inline CSS uses the style attribute of a html element/tag.
   It is not preferable to use inline css because there should be proper layering of code for better design and code clarification. style related things should be in css and not in html file.

6. How a inline js can be written in html and is it preferred to do so?
Ans. inline js can be written as value of event attributes For e.g. <button onClick="Console.Log('Hii')">
Inline js is not good to be used.The reason is not performace based but more about layering, maintainability, better design, usability etc. action related things should be in js file only.

7. What is html parser and how does it parse html?
Ans.HTML Parser is a code which parses html. i.e. it considers html as tree with every tag as node. It goes through every node/tag, understands what that tag wants to display and displays it.

8. Why html parser stops for js file download?
Ans. js is able to make changes in the html and css code; so parser wait for the js to download so that it parses further html only after js makes changes in it (if any).That's why html parser stops for js to download. Its better to write js file at end of body tag as parser can parse and display entire data. Now if there are some changes to be done by js file, js file can do it and parser will re-parse and render those changed html.

9. Does html parser stops for css file download also? And if yes, why dont we write css also in the end of body tag?
Ans. Yes, it stops for css download also. As we know that parser parses html and renders it. If there will be no css styles while parsing, it wil not be able to apply styles to it and thus displayed data will be without styles which is bad.

10. What are different event attributes for different tags? For e.g. button tag has onclick action atrribute
Ans. Check mouse, keyboard, form etc event attributes at https://www.w3schools.com/jsref/dom_obj_event.asp

Project 9:
1. **TODO ak: effect of order change of js files import (script tags)
2. When to use type attribute of script tag and when to use src attribute of script tag?
Ans type attribute is used when we write internal js code. src attribute is used when we add external js file in html.
3. What different combinations of action and onsubmit attributes can be used?
Ans. 
	a. only action attribute
	b. both action attribute and onsubmit attribute
	c. only onsubmit attribute
4. If both action attribute and onsubmit attribute are used, which is called first?
Ans onsubmit attribute
5. What is alert in javascript?
Ans. alert displays an alert box with specified message and ok button.
example: alert("hello")

Project 10:
1. What is MVVM (Model-View-ViewModel) pattern?
Ans. Ususally MVVM pattern is used in client side and MVC pattern is used in server side (but its not necessity). Entire client code we write is divided in 3 layers. 
	a. Model - deals with data which is shown in UI. This data dealing can be fetching data from database, fetching data from server, storing data, data manipulation etc. But this layer has nothing to do with UI.
	b. View - which contains code which is responsible for showing UI of our application. This layer responsible only for how data is shown. It never take cares of what data is shown
	c. ViewModel: This layer handles interaction between Model and View. So the code where we need to bind data and UI comes in ViewModel.
2. Specialites of Model, View and ViewModel layers
	a. Model - It has following features:
		i. It can fetch data from database/server
		ii. It can save/post data to database/server
		iii. It can store data
		iv. It can manipulate data
		v. It has nothing to do with UI controls, it only takes care about data
		vi. In client side, Model should always be js. That js should contain code only related to data and there should not be anything realted to UI.
		vii. It never interacts with View layer or with ViewModel layer.
	b. View - It has following features:
		i. It has code about UI For e.g. html controls (<p>, <div>), css, fonts etc
		ii. html and css are always part fo view layer only. this is because both html and css defines UI.
		iii. It can have js files also, but those js files should have code only related to UI. For e.g. js for changing animation. Any js having code for data cannot be part of View layer.
		iii. It can never interact with Model layer. But it can interact with ViewModel layer.
	c. ViewModel - It has following features
		i. It has that code which binds both UI and data
		ii. Any user actions handler is present in this layer. For e.g. if a user clicked on a button, we want to do some changes in UI or data. Then that action method should be present in this layer.
		iii. This layer can interact with View layer and also with Model layer.
		iv. ViewModel can have code to change UI or change data if that change needs to be done as part of some user action.

3. How to write code in a way that it follows MVVM pattern?
Ans. a. Always write code which changes UI in any way in View layer only
	b. Always write code which changes only data in Model layer only
	c. Any call to server/database which returns data(e.g. data in xml/json format) should be present in Model layer.
	d. Any call to server/database which returns UI (e.g. html) should be present in ViewModel layer. [Because making call to server to return html page is not UI related thing, so it should not be in View layer. But as it is returning UI and not data, so it should be in ViewModel and not in Model layer.]
	e. html, css, fonts should be in View layer
	f. js which handles UI like animation should be in View layer
	g. any user action handling should be in ViewModel layer
	h. data storage should be in model layer.
2. What is MVC pattern? **TODO:pk**
Ans. MVC is Model View Controller.
	- Model : It represent the state of apllication that is data.
	- View : It represent the user interface.
	- Controller : It act as interface between Model and
3. What is diff between MVC and MVVM **TODO:pk**

Project 11:
1. As per MVVM pattern, is it good practise to write js code within html file?
Ans No. Because html file is part of View layer. js code can be part of View or ViewModel or Model layer depending on situation. For e.g. if we wrote js code in html to handle some action like onClick. Now we know that action handling should be done in ViewModel layer. So writing js code in same html file doesnt allow us to separate code as per their layer.

2. What is event, event raise, event listener in javascript?
Ans: Whenever event is raised using event raiser/dispatcher, all added event listeners are called.
event - 
	a. Event is kind of notification which can be raised when some particular thing/user action happens. For e.g. raising click event when user does a mouse click.
	b. Event can be pre-defined. Or user can define custom events also. 
	c. For e.g. click event is pre-defined in javascript.
	d. We can create custom event also using Event and CustomEvent For e.g. var event = new Event('payal') or var event = new CustomEvent('payal', {"customMessage": "payalCustomMessage"})

event raise - 
	a. When event is raised, all the listeners of that event are called and executed. event object itself also goes to those event listeners.
	b. When user clicks using his mouse, javascript has pre-written code which raises click event
	c. Similarly we can raise custom payal event when something happens. For e.g. when user presses ctrl+shft+p+k, then we can raise payal event using dispatchEvent. For e.g. 
	document.getElementById("loginForm").dispatchEvent(event)

event listener - 
	a. event can be listened by any html control. 
	b. We can register any event listener to a event.
	c. When a event raised, all the event listener registered to that event are called. 
	d. When click event raised, we can register a event listener to a html control via 2 ways.
		i. onClick. Whatever method is written in onClick, it behaves as listener. For e.g. in onCLick="loginFormSubmit()", loginFormSubmit is the event listener of click event
		ii. addEventListener. For e.g. addEventListener('click', loginFormSubmit). 
		iii. Both i and ii ways are same thing. Both i and ii are applied on a html control. For e.g. <button id="loginButton" onclick="loginFormSubmit()"/> or document.getElementById("loginButton").addEventListener('click', loginFormSubmit). Both are sme thing.
	b. Similarly for payal event, we can register a listener by addEventListener. For e.g. document.getElementById("loginButton").addEventListener('payal', payalSubmit). In case of custom event, there is no onPayal; only way is addeventlistener. Here payalSubmit is the event listener
	c. In above examples loginFormSubmit and payalSubmit are called event listener methods

3. How to pass additional data from event to event listener?
Ans. In javascript, we can use CustomEvent to create a event which can take additional data. When this event raises, event listener is called. Event listener can get this event and its additional data. If loginFormSubmit is the event listener of payal event, then it can be defined in 2 ways:
	a. function loginFormSubmit() { // write code here}. Here parameters are empty. If we need to use event object, we can access it via 'event' keyword. We can use this event object in event listener method to get event's additional data
	b. function loginFormSubmit(e) { // write code here}. Here we have passed one parameter named e. Always first passed parameter in event listener is event itself. So here e is actually payal event object. We can use this event object in event listener method to get event's additional data. If we wouldnt have defined e parameter, then for accessing event object we had to use it via event keyword.
	c. So, lets say if we created payal event 'new CustomEvent('payal', {"customMessage": "payalCustomMessage"})'; and event listener as 'function loginFormSubmit(e)'; then i can use e.customMessage in event listerner method to get customMessage value. If we had not defined e, i.e. 'function loginFormSubmit()', then event.customMessage needs to be used as event object can be accessed by event keyword.
	d. pre-defined events like onkeypress of javascript is one of the exmaple which passes additional data. For e.g. event.keyCode can be done in key event listener to get which key was pressed. 

4. Example of event, event raiser/disptacher, event listener
Ans.
	a. Lets say we have username textbox.
	<input type="text" name="username" id="username" />
	b. We want to listen keypress on this textbox. So we register an event listener to textbox using onkeypress(its a predefined event in java like onclcik)
	<input type="text" name="username" id="username" onkeypress="onKeyPressListener()"/>
	c. We registered onKeyPressListener method using onkeypress. We could have done it using addeventListener also. i.e. instead of adding onkeypress in control, we could have added this line in js, docuemnt.getElementById("username").addeventlistener("keypress", onKeyPressListener)
	d. Here keypress is event. onkeypresslistener is event listener method. onkeypress is a way to attach event listener to event.
	e. Now lets implement onKeyPressListener method
	function onKeyPressListener() {
		// do what u have to do
	}
	f. Now if want to know which key was pressed, then event listener can know this things from event object only. We can get event object in event listener method in this way:
	function onkeypresslistener() {
		// do what u have to do
	}
	g. In this event listener method, we want that if user pressed enter or shift key, then raise payal event on a button (we have defined this button as <button id="payalButton" />)
	function onkeypresslistener(e) {
		// 13 is the code for enter key; 16 for shift key
		if (e.keyCode == 13) {
			var event = new CustomEvent('payal', {'keyPressed', 'Enter'});
			document.getElementById("payalButton").disptachEvent(event); // here we raised event to payalButton html control
		} else if (e.keyCode == 16) {
			var event = new CustomEvent('payal', {'keyPressed', 'Shift'});
			document.getElementById("payalButton").disptachEvent(event); // here we raised event to payalButton html control
		}
	}	
	h. Even though we raised payal event on payalButton html control, nothing will happen because our html control is <button id="payalButton" />. Here we havent registered any event listener for payal event. So on raising payal event to this control, nothing will happen. Lets register event listener here, so that whenever payal event is raised to this control, event listener can listen this event and call its method. i.e. <button id="payalButton" onpayal="..." />. But this is wrong as 'onpayal' keyword doesnt exist. In custom event listener, only way to register is addeventlistener. So in some starting javascript constructor, we should have registered payal event listener in payalButton html control i.e. document.getElementById("payalButton").addEventListener("payal", payalEventListener)
	i. So by doing this, whenever user presses enter or shift key in username textbox, its keypress event listener will be called which will raise payal event to payalButton html control. So payalEventListener method will be called.
	j. Lets implement payalEventListener method
	function payalEventListener(event) {
		if (event.keyPressed == "Enter") { // Hurray, we came here because of enter press}
		else if (event.keyPressed == "Shift") { // Hurray, we came here because of shift press}
	}

5. how many listeners can be registered to a event?
Ans Any number. in below example we can see that we registered 2 event listenered to payal event.
Event listener registeration:
document.getElementById("control1").addeventlistener("payal", control1PayalEventListener);
document.getElementById("control2").addeventlistener("payal", control2PayalEventListener);

While raising payal event, we will raise same event to both html controls.
var event = new CustomEvent('payal', {'keyPressed', 'Enter'});
document.getElementById("control1").disptachEvent(event);
document.getElementById("control2").disptachEvent(event); 

If we registered event listener to control1 but forgot to raise event to control2, control2eventlisterner will not be called as it hasn't received any event.

6. how to get event object from event listener and when it is required?
Ans If parameter is not defined in event listener, then use event keyword to access event object. If parameter is defined, then first parameter is always event object in event listener method i.e. payalFormSubmitted(e)

7. Which event listener is called first? i. registered via onevent (like onclick) OR ii. addeventlistener
Ans. addeventlistener gets called first and then onevent gets called.

8. Does all the event listeners of a event execute in parallel or one after other?
i.e. 
var event = new CustomEvent('payal', {'keyPressed', 'Enter'});
document.getElementById("control1").disptachEvent(event);
document.getElementById("control2").disptachEvent(event); 

In this example, we raised payal event to control1 and control2. So control1eventlistener and control2eventlistener should be called. But will they execute in parallal on or one after another?
Ans. One after another because javascript runs in single thread. Also they execute in order of their event raising. As we raised event to control1 first, control1eventlistener will be called first and control2eventlistener will be called after control1eventlistener completion.

9. If payal event is raised to both control1 and control2 and both are listening to payal event. Then is it possible to not call control2eventlistener?
Ans. Yes, we can. When control1eventlistener is called, we can get the event object and set its preventDefault property to true i.e.
function control1eventlistener(event) {
	event.preventDefault = true;
	// code here
}

Doing this, event will not go to any event listener after this control.

Project 12:
1. Javascript has submit event pre-defined. Any form control can register to this submit event using addeventlistener or onsubmit.
	a. i.e. <form id="form1" onsubmit="loginFormSubmitted()"/> OR in javascript starting, we could have written document.getElementById("form1").addeventlistener("submit", loginFormSubmitted).
	b. listener registered via addeventlisterner are raised first, then onsubmit event listener are called after that. 
	c. After all the event listeners of submit event are called and none of event listeners returned false, then a form submit happens to the url mentioned in action attribute. i.e. for <form id="form1" action="google.com" />, when submit event is called, all the submit event listeners (via onsubmit or addeventlistener) are executed. If none of the event listener methods returned false, then internally 'document.getElementById("form1").submit('googl.com')' is called.
	d. If any one of submit event listener method returned false OR we do event.preventDefault is done in any eventlistener, then 'document.getElementById("form1").submit('googl.com')' is not called. i.e. form is not submitted to the action attribute value.

2. How submit event is raised?
Ans. When users does a mouse click, click event is created and raised to every html control which is listening to click event. This all is done by javascript internally.
Similarly when users presses some key, keypress event is created and raised to every html control which is listening to a keypress event. This is all done by javascript internally

In same way, if user clicks on a html control WHOSE TYPE IS SUBMIT and that html control IS CHILD OF FORM CONTROL, then javascript creates a submit event and raises it to its parent form control (if form control is listening to submit event)

E.g. 
<form id="form1" ...>
	...
	<button type=submit /> // It can be button or input or any html control but with type submit
</form>

So whenever user clicks on this button, javacript raises submit event also in addition to click event. This submit event is raised to its parent form control which is form1. Thus submit event listeners of form1 are called.

3. What happens with action attribute of form?
Ans If none of the submit event listener returned false, then form is submitted to the value of action attribute internally. i.e 'document.getElementById("form1").submit('<action attribute value>')' is called internally. But if any one of event listener returned false OR event.preventDefault() called from any eventlistener, then this submit doesnt happen.

4. Can we stop form submit to action attribute's value?
Ans. Yes, we can via 2 ways.
	i. Using event.preventDefault() in any of the event listener method.
		<form onsubmit="loginFormSubmit()" id="form1/>. 
		function loginFormSubmit() {
			...
			event.preventDefault();
		}	
	ii. From any submit event listener, return false.
		a. <form onsubmit="loginFormSubmit()" id="form1/>. 
		function loginFormSubmit() {
			...
			return false;
		}
		Here we are returning false form submit event listener, so we are thinking that form will not be automatically submitted to the action attribute value. But we are wrong. We are doing one mistake here.
		b. Actually whatever we write inside onsubmit, is wrapped by another method i.e. final event listener is 
		function temp() {
			loginFormSubmit()
		}
		Is temp returning false here? No. 
		As temp is the submit event listener and not loginFormSubmit; we are actually not returning false.
		c. So, if we ewould have written <form onsubmit=" return loginFormSubmit()" id="form1/>.
		function loginFormSubmit() {
			...
			return false;
		}
		Again as whatever we write in onsubmit is wrapper by another method, final event listener is something like 
		function temp() {
			return loginFormSubmit()
		}
		Is temp returning false here? Yes.
		So, in this case form will not be submitted to action attribute's value.

